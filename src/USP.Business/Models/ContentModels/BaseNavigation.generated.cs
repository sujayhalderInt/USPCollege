//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace USP.Business.Models.ContentModels
{
	// Mixin content Type 1133 with alias "baseNavigation"
	/// <summary>_Base Navigation</summary>
	public partial interface IBaseNavigation : IPublishedContent
	{
		/// <summary>Hide Children From Navigation</summary>
		bool HideChildrenFromNavigation { get; }

		/// <summary>Hide From Navigation</summary>
		bool HideFromNavigation { get; }

		/// <summary>Hide From Search</summary>
		bool HideFromSearch { get; }

		/// <summary>Navigation Title</summary>
		string NavigationTitle { get; }
	}

	/// <summary>_Base Navigation</summary>
	[PublishedContentModel("baseNavigation")]
	public partial class BaseNavigation : PublishedContentModel, IBaseNavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseNavigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseNavigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseNavigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide Children From Navigation: Hides all child pages from navigation menus
		///</summary>
		[ImplementPropertyType("hideChildrenFromNavigation")]
		public bool HideChildrenFromNavigation
		{
			get { return GetHideChildrenFromNavigation(this); }
		}

		/// <summary>Static getter for Hide Children From Navigation</summary>
		public static bool GetHideChildrenFromNavigation(IBaseNavigation that) { return that.GetPropertyValue<bool>("hideChildrenFromNavigation"); }

		///<summary>
		/// Hide From Navigation: Hides both this page and it's children from navigation menus
		///</summary>
		[ImplementPropertyType("hideFromNavigation")]
		public bool HideFromNavigation
		{
			get { return GetHideFromNavigation(this); }
		}

		/// <summary>Static getter for Hide From Navigation</summary>
		public static bool GetHideFromNavigation(IBaseNavigation that) { return that.GetPropertyValue<bool>("hideFromNavigation"); }

		///<summary>
		/// Hide From Search: Do not show this page in search result or listing pages
		///</summary>
		[ImplementPropertyType("hideFromSearch")]
		public bool HideFromSearch
		{
			get { return GetHideFromSearch(this); }
		}

		/// <summary>Static getter for Hide From Search</summary>
		public static bool GetHideFromSearch(IBaseNavigation that) { return that.GetPropertyValue<bool>("hideFromSearch"); }

		///<summary>
		/// Navigation Title: Name of page shown in breadcrumb and navigation menus
		///</summary>
		[ImplementPropertyType("navigationTitle")]
		public string NavigationTitle
		{
			get { return GetNavigationTitle(this); }
		}

		/// <summary>Static getter for Navigation Title</summary>
		public static string GetNavigationTitle(IBaseNavigation that) { return that.GetPropertyValue<string>("navigationTitle"); }
	}
}
