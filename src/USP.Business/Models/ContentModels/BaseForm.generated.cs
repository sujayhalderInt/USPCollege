//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace USP.Business.Models.ContentModels
{
	// Mixin content Type 1129 with alias "baseForm"
	/// <summary>_Base Form</summary>
	public partial interface IBaseForm : IPublishedContent
	{
		/// <summary>Listing Name</summary>
		string ListingName { get; }

		/// <summary>Sub Heading</summary>
		string SubHeading { get; }

		/// <summary>Information Text</summary>
		IHtmlString TextInformation { get; }

		/// <summary>Progress Bar Width</summary>
		int WidthProgressBar { get; }
	}

	/// <summary>_Base Form</summary>
	[PublishedContentModel("baseForm")]
	public partial class BaseForm : PublishedContentModel, IBaseForm
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseForm";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseForm(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseForm, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Listing Name
		///</summary>
		[ImplementPropertyType("listingName")]
		public string ListingName
		{
			get { return GetListingName(this); }
		}

		/// <summary>Static getter for Listing Name</summary>
		public static string GetListingName(IBaseForm that) { return that.GetPropertyValue<string>("listingName"); }

		///<summary>
		/// Sub Heading
		///</summary>
		[ImplementPropertyType("subHeading")]
		public string SubHeading
		{
			get { return GetSubHeading(this); }
		}

		/// <summary>Static getter for Sub Heading</summary>
		public static string GetSubHeading(IBaseForm that) { return that.GetPropertyValue<string>("subHeading"); }

		///<summary>
		/// Information Text
		///</summary>
		[ImplementPropertyType("textInformation")]
		public IHtmlString TextInformation
		{
			get { return GetTextInformation(this); }
		}

		/// <summary>Static getter for Information Text</summary>
		public static IHtmlString GetTextInformation(IBaseForm that) { return that.GetPropertyValue<IHtmlString>("textInformation"); }

		///<summary>
		/// Progress Bar Width
		///</summary>
		[ImplementPropertyType("widthProgressBar")]
		public int WidthProgressBar
		{
			get { return GetWidthProgressBar(this); }
		}

		/// <summary>Static getter for Progress Bar Width</summary>
		public static int GetWidthProgressBar(IBaseForm that) { return that.GetPropertyValue<int>("widthProgressBar"); }
	}
}
