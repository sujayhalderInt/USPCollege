//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace USP.Business.Models.ContentModels
{
	// Mixin content Type 1132 with alias "baseMetaInformation"
	/// <summary>_Base Meta Information</summary>
	public partial interface IBaseMetaInformation : IPublishedContent
	{
		/// <summary>Hide From Sitemap</summary>
		bool HideFromSitemap { get; }

		/// <summary>Metadata Description</summary>
		string MetadataDescription { get; }

		/// <summary>Metadata Keywords</summary>
		IEnumerable<string> MetadataKeywords { get; }

		/// <summary>Metadata Title</summary>
		string MetadataTitle { get; }
	}

	/// <summary>_Base Meta Information</summary>
	[PublishedContentModel("baseMetaInformation")]
	public partial class BaseMetaInformation : PublishedContentModel, IBaseMetaInformation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseMetaInformation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseMetaInformation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseMetaInformation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide From Sitemap
		///</summary>
		[ImplementPropertyType("hideFromSitemap")]
		public bool HideFromSitemap
		{
			get { return GetHideFromSitemap(this); }
		}

		/// <summary>Static getter for Hide From Sitemap</summary>
		public static bool GetHideFromSitemap(IBaseMetaInformation that) { return that.GetPropertyValue<bool>("hideFromSitemap"); }

		///<summary>
		/// Metadata Description
		///</summary>
		[ImplementPropertyType("metadataDescription")]
		public string MetadataDescription
		{
			get { return GetMetadataDescription(this); }
		}

		/// <summary>Static getter for Metadata Description</summary>
		public static string GetMetadataDescription(IBaseMetaInformation that) { return that.GetPropertyValue<string>("metadataDescription"); }

		///<summary>
		/// Metadata Keywords
		///</summary>
		[ImplementPropertyType("metadataKeywords")]
		public IEnumerable<string> MetadataKeywords
		{
			get { return GetMetadataKeywords(this); }
		}

		/// <summary>Static getter for Metadata Keywords</summary>
		public static IEnumerable<string> GetMetadataKeywords(IBaseMetaInformation that) { return that.GetPropertyValue<IEnumerable<string>>("metadataKeywords"); }

		///<summary>
		/// Metadata Title
		///</summary>
		[ImplementPropertyType("metadataTitle")]
		public string MetadataTitle
		{
			get { return GetMetadataTitle(this); }
		}

		/// <summary>Static getter for Metadata Title</summary>
		public static string GetMetadataTitle(IBaseMetaInformation that) { return that.GetPropertyValue<string>("metadataTitle"); }
	}
}
