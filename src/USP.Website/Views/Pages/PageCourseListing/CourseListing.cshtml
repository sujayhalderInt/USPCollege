@using USP.Business.Constants
@using USP.Business.Extensions
@using USP.Business.Models.MappingClasses.Search
@model USP.Business.Models.ContentModels.PageCourseListing

@functions {
    private string IsSelected(string key, string selectedKeys)
    {
        if (selectedKeys == null)
            return "";

        if (selectedKeys == key)
        {
            return "selected=\"selected\"";
        }

        return string.Empty;
    }

}
<div class="results__wrapper">
    <input type="hidden" name="@Html.NameFor(m => m.ListingPostback.Page)" value="@Model.ListingPostback.Page" class="hdnPageNo"/>
   

    @if (Model.SearchResults.HasResults)
    {
        <div class="results__head">
            <p class="results__head__number">@Model.SearchResults.TotalItemCount  @((Model.SearchResults.TotalItemCount == 1) ? "result" : "results")</p>
            <div class="form__check  mb-0">
                <label for="single-select-sort">Sort by</label>
                <p class="select-wrapper">
                    <select id="single-select-sort" class="sort-by" name="@Html.NameFor(m => m.ListingPostback.SortBy)">
                        <option value="@SiteConstants.Sort.Title" @IsSelected(Model.ListingPostback.SortBy, SiteConstants.Sort.Title)>Title</option>
                        <option value="@SiteConstants.Sort.Level" @IsSelected(Model.ListingPostback.SortBy, SiteConstants.Sort.Level)>Level</option>
                        <option value="@SiteConstants.Sort.SubjectArea" @IsSelected(Model.ListingPostback.SortBy, SiteConstants.Sort.SubjectArea)>Subject area</option>
                    </select>
                </p>
            </div>
        </div>
        <div class="results__body"> 
            @foreach (var item in Model.SearchResults.Results.OfType<CourseDetailResultItem>())
            {

                <article class="listing-item">
                    <aside class="listing-item__img">
                        <a href="@item.Url">
                            @if (item.Image != null)
                            {
                                @*@Html.LazyImage(true, item.Image, "CourseListing", aspect: SiteConstants.Crops.AspectRatio.FourToThree)*@
                               
                                <img src="@item.Image.GetCropUrl(width:720,height:540)">
                               
                            }
                        </a>
                    </aside>
                    <div class="listing-item__details">
                        <h3 class="listing-item__details__head">
                            <a href="@item.Url">
                                @item.Heading
                                @if (!string.IsNullOrWhiteSpace(item.CareerSector))
                                {
                                    <span>@item.CareerSector</span>
                                }
                            </a>
                        </h3>
                        <p class="listing-item__details_desc c-usp-yellow">@item.Qualification</p>
                        @if (item.Campuses != null && item.Campuses.Length > 0)
                        {
                            <div class="listing-item__details__tags">
                                <p class="mb-10">@library.GetDictionaryItem("CourseListing.ResultItemCampus")</p>
                                <div>
                                    @foreach (var campus in item.Campuses)
                                    {
                                        <span class="tags">@campus</span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </article>
            }
        </div>

        if (Model.SearchResults.PageCount > Model.SearchResults.PageNumber)
         {
             <div class="text-center">
                 <input name="@Html.NameFor(m => m.ListingPostback.BtnLoadMore)" type="submit" value="@library.GetDictionaryItem("CourseListing.LoadMore")" class="btn btn--inline btn-listing-submit" id="btnpageing"  />
             </div>

         }
    }
    else
    {
        <div class="alert alert-primary" role="alert">
            <i class="icon-exclamation_fill c-usp-orange"><span class="sr-only">@library.GetDictionaryItem("CourseListing.NoResultsLabel")</span></i> 
            <div>
                <p class="mb-0">@library.GetDictionaryItem("CourseListing.NoResultsText")</p>
            </div>
        </div>
    }
</div>